{"name": "test_001", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16", "trace": "self = <test.test_browser.TestLoging object at 0x000002A0FD370500>, setup = None\n\n    def test_001(self,setup):\n     for i in range(5):\n      lg = LoginPage(self.driver)\n      db = DashboardPage(self.driver)\n      time.sleep(1)\n      # Enter username\n      lg.input_user(\"sohail.914\")\n      time.sleep(1)\n      # Enter password\n      lg.input_password(\"sohail@914\")\n    \n    \n      time.sleep(1)\n      # click login button\n      lg.login_button()\n      time.sleep(2)\n      print(\"login Succesfully \")\n      time.sleep(2)\n      # click Inventory Options\n      global_funcations1.click_button(self.driver,\"/html[1]/body[1]/smacc-layouts[1]/div[1]/smacc-sidebar[1]/div[1]/div[2]/div[1]/ul[1]/li[5]/button[1]/i[1]\")\n      time.sleep(5)\n      # click Stock Option\n      global_funcations1.click_button(self.driver,\"//button[normalize-space()='Stock']\")\n      time.sleep(5)\n      global_funcations1.click_button(self.driver,\"//button[normalize-space()='Stock Transfer']\")\n      time.sleep(5)\n      global_funcations1.click_button(self.driver,\"//span[normalize-space()='New']\")\n      time.sleep(10)\n      global_funcations1.click_button(self.driver, \"//img[@src='../../../assets/img/logo.svg']\")\n>     global_funcations1.click_button(self.driver, \"//button[normalize-space()='Stock']\")\n\ntest\\test_browser.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nglobal_funcations1.py:11: in click_button\n    button=WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6814508e-38ee-4709-9499-41bc281c51ae\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002A0FDFA96C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "stdout", "source": "41f9689e-5ddf-49cf-8f05-d84efd0ba7cf-attachment.txt", "type": "text/plain"}], "start": 1731312442873, "stop": 1731312487968, "uuid": "af5718fc-a57e-4927-a935-06467b7cd54e", "historyId": "e9710d44cb86384da424512ef3b1654b", "testCaseId": "e9710d44cb86384da424512ef3b1654b", "fullName": "test.test_browser.TestLoging#test_001", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_browser"}, {"name": "subSuite", "value": "TestLoging"}, {"name": "host", "value": "DESKTOP-VHI7V6P"}, {"name": "thread", "value": "1936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_browser"}]}